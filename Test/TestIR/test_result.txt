__________________________________________
===================TEXT===================


define i64 @origin(i64)
  [%r0] = alloca i64
  [%r0] = Malloc [N]
  Store [N] to [Address %r0_size:[%r0]+offset Immediate -1*i64]
  [%r1] = alloca i64
  Store Immediate 0 to [%r1]
  Store [%r0] to [result]
  Store Immediate 0 to [i]

  label4
  [%r2] = alloca i64
  [%r2] = [i] SLT [N]
  Branch [%r2] true: label6 false: label7

  label6
  Store Immediate 1 to [%r2]
  Jump label8

  label7
  Store Immediate 0 to [%r2]

  label8
  [%r3] = [%r2] NEQ Immediate 0
  Branch [%r2] true: label2 false: label3

  label2
  [%r4] = alloca i64
  [%r4] = Malloc [N]
  Store [N] to [Address %r4_size:[%r4]+offset Immediate -1*i64]
  Store [%r4] to [Address result:[result]+offset [i]*i64]
  Store Immediate 0 to [j]

  label11
  [%r5] = alloca i64
  [%r5] = [j] SLT [N]
  Branch [%r5] true: label13 false: label14

  label13
  Store Immediate 1 to [%r5]
  Jump label15

  label14
  Store Immediate 0 to [%r5]

  label15
  [%r6] = [%r5] NEQ Immediate 0
  Branch [%r5] true: label9 false: label10

  label9
  Store Immediate 0 to [Address result:[Address result:[result]+offset [i]*i64]+offset [j]*i64]

  label12
  [%r8] = alloca i64
  Store [j] to [%r8]
  [j] = [j] add Immediate 1
  Jump label11

  label10

  label5
  [%r10] = alloca i64
  Store [i] to [%r10]
  [i] = [i] add Immediate 1
  Jump label4

  label3
  Return
  Return

define i64 @getPrime(i64)
  [count] = alloca i64
  [i] = alloca i64
  Store Immediate 2 to [count]
  Store Immediate 2 to [i]

  label18
  [%r0] = alloca i64
  [%r0] = [i] SEQ [N]
  Branch [%r0] true: label20 false: label21

  label20
  Store Immediate 1 to [%r0]
  Jump label22

  label21
  Store Immediate 0 to [%r0]

  label22
  [%r1] = [%r0] NEQ Immediate 0
  Branch [%r0] true: label16 false: label17

  label16
  [%r2] = alloca i64
  [%r2] = [Address b:[b]+offset [i]*i64] EQU Immediate 1
  Branch [%r2] true: label26 false: label27

  label26
  Store Immediate 1 to [%r2]
  Jump label28

  label27
  Store Immediate 0 to [%r2]

  label28
  [%r3] = [%r2] NEQ Immediate 0
  Branch [%r2] true: label23 false: label24

  label23
  [%r4] = alloca i64
  [%r4] = [Address tmp:[tmp]+offset Immediate 0*i64] add Immediate 1
  Store [%r4] to [Address tmp:[tmp]+offset Immediate 0*i64]
  Store [i] to [Address prime:[prime]+offset [Address tmp:[tmp]+offset Immediate 0*i64]*i64]
  Store [Address tmp:[tmp]+offset Immediate 0*i64] to [Address gps:[gps]+offset [i]*i64]
  Jump label25

  label24
  Jump label25

  label25

  label31
  [%r5] = alloca i64
  [%r5] = [i] imul [count]
  [%r6] = alloca i64
  [%r6] = [%r5] SEQ [N]
  Branch [%r6] true: label32 false: label33

  label32
  Store Immediate 1 to [%r6]
  Jump label34

  label33
  Store Immediate 0 to [%r6]

  label34
  [%r7] = [%r6] NEQ Immediate 0
  Branch [%r6] true: label29 false: label30

  label29
  [%r8] = alloca i64
  [%r8] = [i] imul [count]
  Store Immediate 0 to [Address b:[b]+offset [%r8]*i64]
  [%r9] = alloca i64
  [%r9] = [count] add Immediate 1
  Store [%r9] to [count]
  Jump label31

  label30
  Store Immediate 2 to [count]

  label19
  [%r10] = alloca i64
  [%r10] = [i] add Immediate 1
  Store [%r10] to [i]
  Jump label18

  label17
  Return

define i64 @getResult(i64, i64, i64)
  [%r0] = alloca i64
  [%r0] = Immediate 1 neg
  [%r1] = alloca i64
  [%r1] = [Address result:[Address result:[result]+offset [k1]*i64]+offset [k2]*i64] EQU [%r0]
  Branch [%r1] true: label38 false: label39

  label38
  Store Immediate 1 to [%r1]
  Jump label40

  label39
  Store Immediate 0 to [%r1]

  label40
  [%r2] = [%r1] NEQ Immediate 0
  Branch [%r1] true: label35 false: label36

  label35
  [%r3] = alloca i64
  [%r3] = [Address prime:[prime]+offset [k2]*i64] imul Immediate 2
  [%r4] = alloca i64
  [%r4] = [%r3] sub [Address prime:[prime]+offset [k1]*i64]
  [%r5] = alloca i64
  [%r5] = [%r4] SEQ [N]
  Branch [%r5] true: label44 false: label45

  label44
  Store Immediate 1 to [%r5]
  Jump label46

  label45
  Store Immediate 0 to [%r5]

  label46
  [%r6] = [%r5] NEQ Immediate 0
  Branch [%r5] true: label41 false: label42

  label41
  [%r7] = alloca i64
  [%r7] = [Address prime:[prime]+offset [k2]*i64] imul Immediate 2
  [%r8] = alloca i64
  [%r8] = [%r7] sub [Address prime:[prime]+offset [k1]*i64]
  [%r9] = alloca i64
  [%r9] = [Address b:[b]+offset [%r8]*i64] NEQ Immediate 0
  Branch [%r9] true: label50 false: label51

  label50
  Store Immediate 1 to [%r9]
  Jump label52

  label51
  Store Immediate 0 to [%r9]

  label52
  [%r10] = [%r9] NEQ Immediate 0
  Branch [%r9] true: label47 false: label48

  label47
  [%r11] = alloca i64
  [%r12] = alloca i64
  [%r12] = [Address prime:[prime]+offset [k2]*i64] imul Immediate 2
  [%r13] = alloca i64
  [%r13] = [%r12] sub [Address prime:[prime]+offset [k1]*i64]
  [%r11] = Call @getResult([N], [k2], [Address gps:[gps]+offset [%r13]*i64])
  [%r14] = alloca i64
  [%r14] = [%r11] add Immediate 1
  Store [%r14] to [Address result:[Address result:[result]+offset [k1]*i64]+offset [k2]*i64]
  Jump label49

  label48
  Jump label49

  label49
  Jump label43

  label42
  Jump label43

  label43
  Jump label37

  label36
  Jump label37

  label37
  [%r15] = alloca i64
  [%r15] = Immediate 1 neg
  [%r16] = alloca i64
  [%r16] = [Address result:[Address result:[result]+offset [k1]*i64]+offset [k2]*i64] EQU [%r15]
  Branch [%r16] true: label56 false: label57

  label56
  Store Immediate 1 to [%r16]
  Jump label58

  label57
  Store Immediate 0 to [%r16]

  label58
  [%r17] = [%r16] NEQ Immediate 0
  Branch [%r16] true: label53 false: label54

  label53
  Store Immediate 1 to [Address result:[Address result:[result]+offset [k1]*i64]+offset [k2]*i64]
  Jump label55

  label54
  Jump label55

  label55
  Return [Address result:[Address result:[result]+offset [k1]*i64]+offset [k2]*i64]
  Return

define i64 @printF(i64, i64, i64)
  [%r1] = alloca i64
  [%r1] = Call @toString([k1])
  Call @print([%r1])

  label61
  [%r2] = alloca i64
  [%r2] = [k3] SGT Immediate 0
  Branch [%r2] true: label62 false: label63

  label62
  Store Immediate 1 to [%r2]
  Jump label64

  label63
  Store Immediate 0 to [%r2]

  label64
  [%r3] = [%r2] NEQ Immediate 0
  Branch [%r2] true: label59 false: label60

  label59
  Call @print([String_0])
  [%r6] = alloca i64
  [%r6] = Call @toString([k2])
  Call @print([%r6])
  [%r7] = alloca i64
  [%r7] = [k2] imul Immediate 2
  [%r8] = alloca i64
  [%r8] = [%r7] sub [k1]
  Store [%r8] to [k2]
  [%r9] = alloca i64
  [%r9] = [k1] add [k2]
  [%r10] = alloca i64
  [%r10] = [%r9] idiv Immediate 2
  Store [%r10] to [k1]
  [%r11] = alloca i64
  [%r11] = [k3] sub Immediate 1
  Store [%r11] to [k3]
  Jump label61

  label60
  Call @print([String_1])
  Return

define i64 @main()
  [%r0] = alloca i64
  [%r0] = Malloc Immediate 1001
  Store Immediate 1001 to [Address %r0_size:[%r0]+offset Immediate -1*i64]
  MemCopy [%r0] to [b]
  [%r1] = alloca i64
  [%r1] = Malloc Immediate 170
  Store Immediate 170 to [Address %r1_size:[%r1]+offset Immediate -1*i64]
  MemCopy [%r1] to [prime]
  [%r2] = alloca i64
  [%r2] = Malloc Immediate 1001
  Store Immediate 1001 to [Address %r2_size:[%r2]+offset Immediate -1*i64]
  MemCopy [%r2] to [gps]
  [%r3] = alloca i64
  [%r3] = Malloc Immediate 1
  Store Immediate 1 to [Address %r3_size:[%r3]+offset Immediate -1*i64]
  MemCopy [%r3] to [tmp]
  Call @origin(Immediate 170)
  Store Immediate 1000 to [N]
  [%r1] = alloca i64
  [%r1] = Call @getInt()
  Store [%r1] to [M]
  Store Immediate 0 to [primeCount]
  Store Immediate 0 to [resultCount]
  Store Immediate 0 to [Address tmp:[tmp]+offset Immediate 0*i64]
  Store Immediate 0 to [i]

  label67
  [%r2] = alloca i64
  [%r2] = [N] add Immediate 1
  [%r3] = alloca i64
  [%r3] = [i] SLT [%r2]
  Branch [%r3] true: label69 false: label70

  label69
  Store Immediate 1 to [%r3]
  Jump label71

  label70
  Store Immediate 0 to [%r3]

  label71
  [%r4] = [%r3] NEQ Immediate 0
  Branch [%r3] true: label65 false: label66

  label65
  Store Immediate 1 to [Address b:[b]+offset [i]*i64]
  Store Immediate 0 to [Address gps:[gps]+offset [i]*i64]

  label68
  [%r5] = alloca i64
  [%r5] = [i] add Immediate 1
  Store [%r5] to [i]
  Jump label67

  label66
  Store Immediate 0 to [i]

  label74
  [%r6] = alloca i64
  [%r6] = [M] add Immediate 1
  [%r7] = alloca i64
  [%r7] = [i] SLT [%r6]
  Branch [%r7] true: label76 false: label77

  label76
  Store Immediate 1 to [%r7]
  Jump label78

  label77
  Store Immediate 0 to [%r7]

  label78
  [%r8] = [%r7] NEQ Immediate 0
  Branch [%r7] true: label72 false: label73

  label72
  Store Immediate 0 to [Address prime:[prime]+offset [i]*i64]

  label75
  [%r9] = alloca i64
  [%r9] = [i] add Immediate 1
  Store [%r9] to [i]
  Jump label74

  label73
  Store Immediate 0 to [i]

  label81
  [%r10] = alloca i64
  [%r10] = [i] SEQ [M]
  Branch [%r10] true: label83 false: label84

  label83
  Store Immediate 1 to [%r10]
  Jump label85

  label84
  Store Immediate 0 to [%r10]

  label85
  [%r11] = [%r10] NEQ Immediate 0
  Branch [%r10] true: label79 false: label80

  label79
  Store Immediate 0 to [j]

  label88
  [%r12] = alloca i64
  [%r12] = [j] SEQ [M]
  Branch [%r12] true: label90 false: label91

  label90
  Store Immediate 1 to [%r12]
  Jump label92

  label91
  Store Immediate 0 to [%r12]

  label92
  [%r13] = [%r12] NEQ Immediate 0
  Branch [%r12] true: label86 false: label87

  label86
  [%r14] = alloca i64
  [%r14] = Immediate 1 neg
  Store [%r14] to [Address result:[Address result:[result]+offset [i]*i64]+offset [j]*i64]

  label89
  [%r15] = alloca i64
  [%r15] = [j] add Immediate 1
  Store [%r15] to [j]
  Jump label88

  label87

  label82
  [%r16] = alloca i64
  [%r16] = [i] add Immediate 1
  Store [%r16] to [i]
  Jump label81

  label80
  [%r17] = alloca i64
  [%r17] = Call @getPrime([N])
  Store [Address tmp:[tmp]+offset Immediate 0*i64] to [primeCount]
  Store Immediate 1 to [i]

  label95
  [%r18] = alloca i64
  [%r18] = [i] SLT [primeCount]
  Branch [%r18] true: label97 false: label98

  label97
  Store Immediate 1 to [%r18]
  Jump label99

  label98
  Store Immediate 0 to [%r18]

  label99
  [%r19] = [%r18] NEQ Immediate 0
  Branch [%r18] true: label93 false: label94

  label93
  [%r20] = alloca i64
  [%r20] = [i] add Immediate 1
  Store [%r20] to [j]

  label102
  [%r21] = alloca i64
  [%r21] = [j] SEQ [primeCount]
  Branch [%r21] true: label104 false: label105

  label104
  Store Immediate 1 to [%r21]
  Jump label106

  label105
  Store Immediate 0 to [%r21]

  label106
  [%r22] = [%r21] NEQ Immediate 0
  Branch [%r21] true: label100 false: label101

  label100
  [%r23] = alloca i64
  [%r23] = Immediate 1 neg
  [%r24] = alloca i64
  [%r24] = [Address result:[Address result:[result]+offset [i]*i64]+offset [j]*i64] EQU [%r23]
  Branch [%r24] true: label110 false: label111

  label110
  Store Immediate 1 to [%r24]
  Jump label112

  label111
  Store Immediate 0 to [%r24]

  label112
  [%r25] = [%r24] NEQ Immediate 0
  Branch [%r24] true: label107 false: label108

  label107
  [%r26] = alloca i64
  [%r26] = Call @getResult([N], [i], [j])
  Store [%r26] to [Address result:[Address result:[result]+offset [i]*i64]+offset [j]*i64]
  [%r27] = alloca i64
  [%r27] = [Address result:[Address result:[result]+offset [i]*i64]+offset [j]*i64] SGT Immediate 1
  Branch [%r27] true: label116 false: label117

  label116
  Store Immediate 1 to [%r27]
  Jump label118

  label117
  Store Immediate 0 to [%r27]

  label118
  [%r28] = [%r27] NEQ Immediate 0
  Branch [%r27] true: label113 false: label114

  label113
  [%r29] = alloca i64
  [%r29] = Call @printF([Address prime:[prime]+offset [i]*i64], [Address prime:[prime]+offset [j]*i64], [Address result:[Address result:[result]+offset [i]*i64]+offset [j]*i64])
  [%r30] = alloca i64
  [%r30] = [resultCount] add Immediate 1
  Store [%r30] to [resultCount]
  Jump label115

  label114
  Jump label115

  label115
  Jump label109

  label108
  Jump label109

  label109

  label103
  [%r31] = alloca i64
  [%r31] = [j] add Immediate 1
  Store [%r31] to [j]
  Jump label102

  label101

  label96
  [%r32] = alloca i64
  [%r32] = [i] add Immediate 1
  Store [%r32] to [i]
  Jump label95

  label94
  Call @print([String_2])
  [%r35] = alloca i64
  [%r35] = Call @toString([resultCount])
  Call @println([%r35])
  Return Immediate 0
  Return


__________________________________________
===================TYPE===================


__________________________________________
===================DATA===================
String_0:  
String_1: 

String_2: Total: 
