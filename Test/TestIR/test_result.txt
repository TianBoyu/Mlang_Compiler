__________________________________________
===================TEXT===================


define i64 @main()
  [Address_obj:] = alloca [struct C2]
  [Address_%r0:] = alloca Immediate 8
  [Address_%r0:] = Malloc Immediate 4
  Store [Address_%r0:] to [Address_obj:]
  Store Immediate 10 to [Address_x:[Address_obj:]+offset Immediate 0*i64]
  Store Immediate 20 to [Address_y:[Address_obj:]+offset Immediate 1*i64]
  [Address_%r1:] = alloca i64
  [Address_%r1:] = [Address_x:[Address_obj:]+offset Immediate 0*i64] SGT [Address_y:[Address_obj:]+offset Immediate 1*i64]
  Branch [Address_%r1:] true: label0 false: label1

  label0
  Store Immediate 1 to [Address_%r1:]
  Jump label2

  label1
  Store Immediate 0 to [Address_%r1:]
  Jump label2

  label2
  Store [Address_%r1:] to [Address_b:[Address_obj:]+offset Immediate 2*i64]
  [Address_%r2:] = [Address_b:[Address_obj:]+offset Immediate 2*i64] NEQ Immediate 0
  Branch [Address_b:[Address_obj:]+offset Immediate 2*i64] true: label3 false: label4

  label3
  Store Immediate 40 to [Address_z:[Address_obj:]+offset Immediate 3*i64]
  Jump label5

  label4
  Store Immediate 80 to [Address_z:[Address_obj:]+offset Immediate 3*i64]
  Jump label5

  label5
  [Address_%r3:] = alloca i64
  Store [Address_x:[Address_obj:]+offset Immediate 0*i64] to [Address_%r3:]
  [Address_%r3:] = [Address_%r3:] add [Address_y:[Address_obj:]+offset Immediate 1*i64]
  [Address_%r4:] = alloca i64
  Store [Address_%r3:] to [Address_%r4:]
  [Address_%r4:] = [Address_%r4:] add [Address_z:[Address_obj:]+offset Immediate 3*i64]
  Return [Address_%r4:]
  Return


__________________________________________
===================TYPE===================
struct C2 = type {i64 i64 i64 i64 }


__________________________________________
===================DATA===================
